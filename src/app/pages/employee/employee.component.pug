.row.m-0
  .col-md-12.p-0.bg-white
    .row
      .col-md-9.m-auto
        #user-overview
          .avatar-user
              .avatar-name
                | {{ currentUser.initials() }}
          .inline-block.details
            h1.text-brown.font-bold {{ currentUser.display_name }}
            h4.text-capitalize {{ currentUser.role }} Team
            button.btn.btn-instant-feedback.btn-instant-feedback-link((click)="sideMenuState = 'in'; feedbackState = 'ask'") Ask for Feedback
            | &nbsp; &nbsp;
            button.btn.btn-instant-feedback.btn-instant-feedback-link((click)="sideMenuState = 'in'; feedbackState = 'give'") Give Feedback

      .col-md-9.m-auto
        br
        br
        br
        ul.reset.user-overview-options
          li.is-active
            a([routerLink]="['/employee/overview']" routerLinkActive="active") Overview
          li.is-active
            a([routerLink]="['/employee/one-on-ones']" routerLinkActive="active") 1-on-1s
          li.is-active
            a([routerLink]="['/employee/feedbacks']" routerLinkActive="active") Feedback
  .col-md-12.p-0
    router-outlet

modal(
  [(visible)]="showModal",
  [(modalText)]="modalText",
  [(buttons)]="modalButtons",
  (modalStateChange)="modalStateChange($event)"
)

side-menu(
  [(menuState)]="sideMenuState",
  [(feedbackState)]="feedbackState",
  [(form)]="feedbackForm",
  (cancel)="toggleSideMenuState($event)",
  (submitFeedback)="submit($event)"
)

  #question-form(feedback="ask")
    .form-header-text Ask for feedback from
    br
    ng-select(class="custom",
      [items]="users",
      [multiple]="true",
      [closeOnSelect]="false",
      [hideSelected]="true",
      bindLabel="display_name",
      placeholder="Choose a User",
      [class.ng-invalid]="questionForm['errors']['no sender']",
      [(ngModel)]="chosenUsers")
    br
    br
    .bordered-bottom([class.is-invalid]="questionForm['errors']['no question']")
      div
        .float-left
          label(for="existingQ") Choose an existing feedback question
        .float-right
          input#existingQ.form-check-input(type="radio", [(ngModel)]="questionFormat", value="existingQ")
        .spacer &nbsp;
      #existing-questions([class.hidden]="questionFormat!='existingQ'")
        .choice(*ngFor="let q of existingQs", (click)="questionForm['chosen_question']=q", [class.selected]="questionForm['chosen_question']==q") {{ q }}
        .choice
          br
    .bordered-bottom([class.is-invalid]="questionForm['errors']['no question']")
      div
        .float-left
          label(for="customQ") Add your own
        .float-right
          input#customQ.form-check-input(type="radio", [(ngModel)]="questionFormat", value="customQ")
        .spacer &nbsp;
      #custom-question([class.hidden]="questionFormat!='customQ'")
        strong Your Feedback Question
        textarea.form-control(type="text", [class.is-invalid]="questionForm['errors']['no question']", [(ngModel)]="questionForm['question']")


  form(feedback="give", [formGroup]="feedbackForm", novalidate, autocomplete="off", (ngSubmit)="submitFeedback(feedbackForm.value)")
    .form-header-text Help and improve
      select.form-control.inline-block(formControlName="recipient_id", [class.is-invalid]="submitted && f.recipient_id.errors")
        option(value="", disabled="true") Choose a User
        option(*ngFor="let user of users", [value]="user.id") {{ user.display_name }}
      | with your feedback:
    br
    br
    .form-group-box
      textarea.form-control.form-control-line([class.is-invalid]="submitted && f.comment.errors", type="text", formControlName="comment")
      label Your feedback
      .invalid-feedback
        span Please enter your feedback
