.row
  .col-md-10.m-auto
    .mt-5.mb-5
      .row
        #default-questions-container.col-md-4([ng2-loading]="loading.topics")
          h5.font-karla.font-bold.text-brown.mb-3 Default Questions
          form.container(novalidate, autocomplete="off", [formGroup]="questionForm")
            ul#default-questions
              li(formArrayName="questions", *ngFor="let question of questionformData; let i = index;")
                div([formGroupName]="i")
                  .relative
                    .inline-block.text(*ngIf="!question.get('user_id').value || editIndex != i") {{ question.get('question').value }}
                    input.form-control.inline-block(*ngIf="editIndex == i", [class.is-invalid]="submitUpdated && question.controls.question.errors", type="text", formControlName="question", (keydown.enter)="updateQuestion(question.value)")
                    .float-right.press-enter(*ngIf="editIndex == i && question.controls.question.valid") press enter
                    .inline-block.ml-1(*ngIf="question.get('user_id').value && editIndex != i")
                      button.btn-action((click)="editQuestion(question.value, i)")
                        span.ti-pencil
                      button.btn-action((click)="removeQuestion(question.value, i)")
                        span.ti-trash
                    .invalid-feedback
                      span Please enter a question
          br
          h5.section-heading.mt-2.font-karla Add a question:
          form(novalidate, autocomplete="off", [formGroup]="addQuestionForm", (ngSubmit)="submitQuestion(addQuestionForm.value)")
            input.relative.inline-block.form-control([class.is-invalid]="submitted && f.question.errors", type="text", formControlName="question")
            .float-right.press-enter(*ngIf="f.question.valid") press enter
            .invalid-feedback
              span Please enter a question
          br
          br
        #meetings-container.col-md-7([ng2-loading]="loading.meetings")
          form.mt-4(novalidate, autocomplete="off", [formGroup]="searchForm", (ngSubmit)="onSearch(searchForm.value)")
            #date-range.inline-block
              span.font-bold {{ filters.date_since.value | date : 'MMMM d, y'}} - {{ filters.date_until.value | date : 'MMMM d, y'}}&nbsp;&nbsp;
              button.btn.btn-instant-feedback.btn-daterange(type="button", daterangepicker, [options]="options", (selected)="selectedDate($event)")
                .icon-calendar.icon-sm.inline-block
                .icon-down-nav.icon-xs.inline-block
            #search-bar.float-right
              span.ti-search.text-idle
              input.form-control.inline-block(type="text", formControlName="username", placeholder="Search")
          br
          br
          table.table.table-striped
            thead
              tr
                th
                  ng-container(*ngIf="orderParams['manager'] != 'asc'")
                    button.btn-action((click)="changeOrder('manager', 'asc')")
                      span Facilitator
                      span.icon-holder.ti-angle-down
                  ng-container(*ngIf="orderParams['manager'] && orderParams['manager'] != 'desc'")
                    button.btn-action((click)="changeOrder('manager', 'desc')")
                      span Facilitator
                      span.icon-holder.ti-angle-up
                th
                  ng-container(*ngIf="orderParams['employee'] != 'asc'")
                    button.btn-action((click)="changeOrder('employee', 'asc')")
                      span Employee
                      span.icon-holder.ti-angle-down
                  ng-container(*ngIf="orderParams['employee'] && orderParams['employee'] != 'desc'")
                    button.btn-action((click)="changeOrder('employee', 'desc')")
                      span Employee
                      span.icon-holder.ti-angle-up
                th
                  ng-container(*ngIf="orderParams['scheduled_at'] != 'asc'")
                    button.btn-action((click)="changeOrder('scheduled_at', 'asc')")
                      span Date
                      span.icon-holder.ti-angle-down
                  ng-container(*ngIf="orderParams['scheduled_at'] && orderParams['scheduled_at'] != 'desc'")
                    button.btn-action((click)="changeOrder('scheduled_at', 'desc')")
                      span Date
                      span.icon-holder.ti-angle-up
                th
                  span Status
                th
                  span
            tbody
              tr(*ngFor="let meeting of meetings | paginate: paginationControls")
                td
                  span(*ngIf="meeting['manager']['id'] == currentUser['id']") {{ meeting['manager']['display_name'] }}
                  button.btn-action(*ngIf="meeting['manager']['id'] != currentUser['id']", [routerLink]="['/profile', meeting['manager']['id'], 'overview']")
                    u {{ meeting['manager']['display_name'] }}
                td
                  span(*ngIf="meeting['employee']['id'] == currentUser['id']") {{ meeting['employee']['display_name'] }}
                  button.btn-action(*ngIf="meeting['employee']['id'] != currentUser['id']", [routerLink]="['/profile', meeting['employee']['id'], 'overview']")
                    u {{ meeting['employee']['display_name'] }}
                td
                  span {{ meeting['scheduled_at'] | date: 'MMMM d' }}
                td
                  span.text-capitalize {{ meeting['status'] }}
                td.actions
                  button.btn-action.font-bold([routerLink]="['/one-on-ones', meeting.id]") VIEW
              tr(*ngIf="meetings.length < 1")
                td.text-center(colspan="5")
                  span.text-idle No scheduled 1-on-1s
          .mr-3
            pagination([config]="paginationControls", (pageChange)="pageChange($event)")
          